<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAApYAAAHjCAIAAAAWl8iyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGYBJREFUeF7t3Wti2roWgNEzrg4o48lomAyDudeGrQSDZQtQomxY69c5qiM/ouoL
        KWn/+x8AkJCEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKE
        A0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4
        AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQD
        QEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgA
        pCThAJCShNPBf/Cu4vcAjGD90UFsZvB+4vcAjGD90UFsZvB+4vcAjGD90UFsZvB+4vcAjGD90UFsZvB+
        4vcAjGD90UFsZkWMwiuKVV7EKIxg/dFBbGZFjMIrilVexCiMYP3RQWxmRYzCK4pVXsQojGD90UFsZkWM
        wiuKVV7EKIxg/dFBbGZFjMIrilVexCiMYP3RQWxmRYzCK4pVXsQojGD90UFsZkWMwiuKVV7EKIxg/dFB
        bGZFjMIrilVexCiMYP3RQWxmRYzCK4pVXsQojGD90UFsZkWMwiuKVV7EKIxg/dFBbGZFjMIrilVexCiM
        YP3RQWxmRYzCK4pVXsQojGD90UFsZkWMwiuKVV7EKIxg/dFBbGZFjMIrilVexCiMYP3RQWxmRYzCK4pV
        XsQojGD90UFsZkWMwiuKVV7EKIxg/dFBbGZFjMIrilVexCiMYP3RQWxmRYy2OH7+iw/a9XGIj+HvaPv8
        /fs8xvGvIG6qiFEYwfqjg9jMihhtIeG5SbgtlJGsPzqIzayI0RYSnpuE20IZyfqjg9jMihhtIeG5Sbgt
        lJGsPzqIzayI0RYSnpuE20IZyfqjg9jMihhtIeG5SbgtlJGsPzqIzayI0RYSnpuE20IZyfqjg9jMihht
        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
        L8X1+4fE8y1iFEaw/uggNrMiRrlLv38mrcu/tEJNPOQiRmEE648OYjMrYpT7nf55lcdLfv7x8ZiLnxHP
        uohRGMH6o4PYzIoY5QnH4+H7H1ipRP38S+e/WL3p71Onh3j6RYzCCNYfHcRmVsQovKJY5UWMwgjWHx3E
        ZlbEKLyiWOVFjMII1h8dxGZWxCi8oljlRYzCCNYfHcRmVsQovKJY5UWMwgjWHx3EZlbEKLyiWOVFjMII
        1h8dxGZWxCi8oljlRYzCCNYfHcRmVsQovKJY5UWMwgjWHx3EZlbEKLyiWOVFjMII1h8dxGZWxCi8oljl
        RYzCCNYfHcRmVsQovKJY5UWMwgjWHx3EZlbEKLyiWOVFjMII1h8dxGYG7yd+D8AI1h8dxGYG7yd+D8AI
        1h8dxGYG7yd+D8AI1h8dxGYG7yd+D8AI1h8dxGYG7yd+D8AI1h8ApCThAJCShANAShIOAClJOACkJOEA
        kJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4A
        KUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQ
        koQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKP5bw4+e//1Z9HOKIW4ePOObaxscA
        wHuScABIScIBICUJB4CUJBwAUpJwAEhJwgEgpewJPx4+Pz/+TeLIb/Pgx8fn4RhH7lmf6WuWjWlWb/V8
        ydOkH9+/OE11up61+/z3Wc5wPH3Q5ZTTx21eQDh94PrDON3Hzo3sXNXKRd083JtLXzuoYvrQB59/bdn4
        wg94cXkTfjxcxHHTlJHNirTONIc0PmShmvCV+zk1sR7LrUupnX5yKmcctq/yPOpXtX1R54/evvTNT8Cz
        z1/CgTeVNOHV2Wu+U7PU/oXA2VpGKgnfSmL874XpV/ZvajWFdz+L2cpMlauqflKKear9a/jB51+7QgkH
        XlzKhD8UrbUT7+Zp1fVE7ZcT4XzstCc36X3sWUxuZnr8qta+c3/j5nyTPs+/NsvGSgN4BRkTvnbYxauz
        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
        4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoS
        DgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCTh
        AJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIO
        AClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEA
        kJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4A
        KUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQ
        koQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgAp
        STgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCS
        hANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJ
        OACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKE
        A0BKEg4AKUk4AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4
        AKQk4QCQkoQDQEoSDgApSTgApCThAJCShANAShIOAClJOACkJOEAkJKEA0BKEg4AKUk4AKQk4QCQ0P/+
        939CIv3+mXBrPwAAAABJRU5ErkJggg==
</value>
  </data>
</root>